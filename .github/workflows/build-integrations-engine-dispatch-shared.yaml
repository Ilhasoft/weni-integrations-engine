name: Build Weni Integrations Engine in Shared (Dispatch)

on:
  workflow_dispatch:
    inputs:

      source-branch:
        description: 'Source branch in NinaWebApp repository (main, staging, develop, fix/sentry etc.)'
        required: true
        default: 'main'

      tag-name:
        description: 'Tag id (v0.0.1-develop, v0.0.2, etc.)'
        required: true

      destination-env:
        description: 'Destination environment (develop, production, staging)'
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest 
    steps:

      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.inputs.source-branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: 869898323958.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID_SHARED }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY_SHARED }}

      - name: Build and push - Integrations Engine Image
        id: docker_build1
        uses: docker/build-push-action@v2
        with:
          context: .
          labels: branch=${{github.event.inputs.source-branch}},commit=${{GITHUB_SHA}},repository=https://github.com/Ilhasoft/weni-integrations-engine
          file: docker/Dockerfile
          push: true
          tags: 869898323958.dkr.ecr.us-east-1.amazonaws.com/integrations:engine-${{github.event.inputs.tag-name}}
          no-cache: true

      - name: Check out Kubernetes Manifests
        uses: actions/checkout@master
        with:
          ref: main
          repository: Ilhasoft/kubernetes-manifests
          token: ${{ secrets.CICEROW_GITHUB_PERMANENT_TOKEN }}
          path: ./kubernetes-manifests/

      - name: Set variable tag for jq
        run: |
          echo "IMAGE_TAG=869898323958.dkr.ecr.us-east-1.amazonaws.com/integrations:engine-${{github.event.inputs.tag-name}}" >> $GITHUB_ENV

      - name: Update image on deployment
        run: |
            sudo apt update
            sudo apt install -y jq
            app_dir='integrations'
            deploy_patch_name='deployment-engine.json'
            for e in ${{github.event.inputs.destination-env}}; do
              if [ -d "kubernetes-manifests/${app_dir}/${e}" ] ; then
                echo 'Old image to replace:'
                cat "kubernetes-manifests/${app_dir}/${e}/${deploy_patch_name}" | jq '.[] | select(.path == "/spec/template/spec/containers/0/image") | .value'
                echo 'New configurations:'
                new_configuration=$(
                  cat "kubernetes-manifests/${app_dir}/${e}/${deploy_patch_name}" \
                    | jq '(..|select(.path == "/spec/template/spec/containers/0/image")?) += {value: "'"${IMAGE_TAG}"'"}'
                )
                echo "$new_configuration"
                echo "$new_configuration" > "kubernetes-manifests/${app_dir}/${e}/${deploy_patch_name}"
              else
                echo "kubernetes-manifests/${app_dir}/${e}: Does not exist, skipping"
              fi
            done

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.CICEROW_GITHUB_PERMANENT_TOKEN }}
          repository: Ilhasoft/kubernetes-manifests
          directory: ./kubernetes-manifests/
          branch: main
          message: "From Integrations Engine Build (Dispatch)"

      - name: Generated Image URL to Copy
        run: |
            echo ${{ env.IMAGE_TAG }}
