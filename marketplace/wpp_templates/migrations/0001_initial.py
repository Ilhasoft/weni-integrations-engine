# Generated by Django 3.2.4 on 2022-08-25 14:30

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('applications', '0013_app_flow_object_uuid'),
    ]

    operations = [
        migrations.CreateModel(
            name='TemplateMessage',
            fields=[
                ('app_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='applications.app')),
                ('name', models.CharField(max_length=60)),
                ('category', models.CharField(choices=[('ACCOUNT_UPDATE', 'WhatsApp.data.templates.category.account_update'), ('PAYMENT_UPDATE', 'WhatsApp.data.templates.category.payment_update'), ('PERSONAL_FINANCE_UPDATE', 'WhatsApp.data.templates.category.personal_finance_update'), ('SHIPPING_UPDATE', 'WhatsApp.data.templates.category.shipping_update'), ('RESERVATION_UPDATE', 'WhatsApp.data.templates.category.reservation_update'), ('ISSUE_RESOLUTION', 'WhatsApp.data.templates.category.issue_resolution'), ('APPOINTMENT_UPDATE', 'WhatsApp.data.templates.category.appointment_update'), ('TRANSPORTATION_UPDATE', 'WhatsApp.data.templates.category.transportation_update'), ('TICKET_UPDATE', 'WhatsApp.data.templates.category.ticket_update'), ('ALERT_UPDATE', 'WhatsApp.data.templates.category.alert_update'), ('AUTO_REPLY', 'WhatsApp.data.templates.category.auto_reply'), ('TRANSACTIONAL', 'WhatsApp.data.templates.category.transactional'), ('MARKETING', 'WhatsApp.data.templates.category.marketing'), ('OTP', 'WhatsApp.data.templates.category.otp')], max_length=200)),
                ('template_type', models.CharField(choices=[('MEDIA', 'WhatsApp.data.templates.type.media'), ('INTERACTIVE', 'WhatsApp.data.templates.type.interactive'), ('TEXT', 'WhatsApp.data.templates.type.text')], max_length=100)),
                ('namespace', models.CharField(max_length=60)),
            ],
            options={
                'abstract': False,
            },
            bases=('applications.app',),
        ),
        migrations.CreateModel(
            name='TemplateTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('APPROVED', 'WhatsApp.data.templates.translaction.status.approved'), ('IN_APPEAL', 'WhatsApp.data.templates.translaction.status.in_appeal'), ('PENDING', 'WhatsApp.data.templates.translaction.status.pending'), ('REJECTED', 'WhatsApp.data.templates.translaction.status.rejected'), ('PENDING_DELETION', 'WhatsApp.data.templates.translaction.status.pending_deletion'), ('DELETED', 'WhatsApp.data.templates.translaction.status.deleted'), ('DISABLED', 'WhatsApp.data.templates.translaction.status.disabled'), ('LOCKED', 'WhatsApp.data.templates.translaction.status.locked')], max_length=20)),
                ('body', models.CharField(max_length=1024)),
                ('footer', models.CharField(max_length=60)),
                ('variable_count', models.IntegerField()),
                ('language', models.CharField(max_length=60)),
                ('country', models.CharField(max_length=60)),
                ('namespace', models.CharField(max_length=60)),
                ('external_id', models.CharField(max_length=60)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='translations', to='wpp_templates.templatemessage')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('header_type', models.CharField(choices=[('TEXT', 'WhatsApp.data.templates.header.types.text'), ('IMAGE', 'WhatsApp.data.templates.header.types.image'), ('DOCUMENT', 'WhatsApp.data.templates.header.types.document'), ('VIDEO', 'WhatsApp.data.templates.header.types.video')], max_length=20)),
                ('text', models.CharField(default=None, max_length=60)),
                ('translation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='headers', to='wpp_templates.templatetranslation')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateButton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('button_type', models.CharField(choices=[('QUICK_REPLY', 'WhatsApp.data.templates.buttons.type.quick_reply'), ('PHONE_NUMBER', 'WhatsApp.data.templates.buttons.type.phone_number'), ('URL', 'WhatsApp.data.templates.buttons.type.url')], max_length=20)),
                ('text', models.CharField(max_length=25)),
                ('country_code', models.IntegerField()),
                ('phone_number', models.CharField(default=None, max_length=20)),
                ('url', models.CharField(default=None, max_length=2000)),
                ('translation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buttons', to='wpp_templates.templatetranslation')),
            ],
        ),
        migrations.AddConstraint(
            model_name='templateheader',
            constraint=models.CheckConstraint(check=models.Q(('header_type__exact', 'TEXT'), ('text__isnull', False)), name='header_type_exact_text_and_text_isnull_false'),
        ),
        migrations.AddConstraint(
            model_name='templatebutton',
            constraint=models.CheckConstraint(check=models.Q(('button_type__exact', 'URL'), ('url__isnull', False)), name='button_type_exact_url_and_url_isnull_false'),
        ),
        migrations.AddConstraint(
            model_name='templatebutton',
            constraint=models.CheckConstraint(check=models.Q(('button_type__exact', 'PHONE_NUMBER'), ('phone_number__isnull', False)), name='button_type_exact_phone_number_and_phone_number_isnull_false'),
        ),
    ]
